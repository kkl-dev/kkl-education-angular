
openapi: 3.0.1
info:
  title: kkl Education API
  description: Education new project|
  contact:
    email: yochai@one1.co.il
  version: 1.3.0
servers:
- url: https://virtserver.swaggerhub.com/shivek/kkl-education/1.1.0
  description: SwaggerHub API Auto Mocking
tags:
- name: user
  description: Users functions
- name: admin
  description: Admin functions only

paths:
  /loginPB/{permissionId}/{permissionName}/{userId}:
    get:
      tags:
      - user
      operationId: LoginPB
      parameters:
      - name: permissionId
        in: path
        required: true
        schema:
          type: integer
      - name: permissionName
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
  /loginPB:
    get:
      tags:
      - user
      operationId: LoginToPBTest
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
  /lookup/FieldForestCenter:
    get:
      tags:
      - user
      operationId: GetLookupFieldForestCenters
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FieldForestCenter'
  /lookup/accommodationType/{fieldForestCenterId}:
    get:
      tags:
      - user
      operationId: GetLookupAccommodationType
      parameters:
      - name: fieldForestCenterId
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationType'
  /availableAccomodationDates/{fieldForestCenterId}/{fromDate}/{tillDate}:
    get:
      tags:
      - user
      operationId: GetAvailableAccomodationDates
      description: ''
      parameters:
      - name: fieldForestCenterId
        in: path
        required: true
        schema:
          type: integer
      - name: fromDate
        in: path
        required: true
        schema:
          type: string
          format: date-time
      - name: tillDate
        in: path
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableAccomodationDate'
        "400":
          description: invalid data

  /availableSleepingOptions/{fieldForestCenterId}/{fromDate}/{tillDate}:
    get:
      tags:
      - user
      operationId: GetAvailableSleepingOptionsByDates
      description : ''
      parameters:
      - name: fieldForestCenterId
        in: path
        required: true
        schema:
          type: integer
      - name: fromDate
        in: path
        required: true
        schema:
          type: string
          format: date-time
      - name: tillDate
        in: path
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableSleepingOptionsByDay'
        "400":
          description: invalid data
  /getAvailableFacilities/{fieldForestCenterId}/{fromDate}/{tillDate}:
    get:
      tags:
      - user
      operationId: GetAvailableFacilities
      parameters:
      - name: fieldForestCenterId
        in: path
        required: true
        schema:
          type: integer
      - name: fromDate
        in: path
        required: true
        schema:
          type: string
          format: date-time
      - name: tillDate
        in: path
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FacilityDate'

  /getMapFacilities/{fieldForestCenterId}/{fromDate}/{tillDate}:
    get:
      tags:
      - user
      operationId: GetMapFacilities
      parameters:
      - name: fieldForestCenterId
        in: path
        required: true
        schema:
          type: integer
      - name: fromDate
        in: path
        required: true
        schema:
          type: string
          format: date-time
      - name: tillDate
        in: path
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FacilityMapByDates'
        "400":
           description: invalid data
             
  /lookup/getAgeGroup:
    get:
      tags:
      - user
      operationId: GetAgeGroup
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgeGroup'
  /lookup/participantType:
    get:
      tags:
      - user
      operationId: GetParticipantTypes
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParticipantType'
  /lookup/getAttributes:
    get:
      tags:
      - user
      operationId: GetAttributes
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TripAttribute'
  /activityType/{attributeId}/{userId}:
    get:
      tags:
      - user
      operationId: GetActivityByAttribute
      parameters:
      - name: attributeId
        in: path
        required: true
        schema:
          type: integer
      - name: userId
        in: path
        required: true
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityType'
  /countries:
    get:
      tags:
      - user
      operationId: GetCountries
      responses:
        "200":
          description: list of countries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'

  /languages:
    get:
      tags:
      - user
      operationId: GetLanguages
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Language'
  /tripActivities:
    get:
      tags:
      - activities
      operationId: GetTripActivities
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TripActivityLookup'
  /activityCategories:
    get:
      tags:
      - activities
      operationId: GetActivityCategories
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityCategory'


  /areas:
    get:
      tags:
      - user
      operationId: GetAreas
      responses:
        "200":
          description: list of areas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Area'

  /customer/{customerCode}:
    get:
      tags:
      - user
      operationId: GetCustomer
      parameters:
      - name: customerCode
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseCustomer' 

  /customers/{custAutoComplete}/{filterParam}:
    get:
      tags:
      - user
      operationId: GetCustomersByParameters
      parameters:
      - name: custAutoComplete
        in: path
        required: true
        schema:
          type: string
      - name: filterParam
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseCustomer' 

  /getKKLWorkers/{custAutoComplete}:
    get:
      tags:
      - user
      operationId: GetKKLWorkers
      parameters:
      - name: custAutoComplete
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseCustomer'

  
  /budget/expensesAndIncome:
    post:
      tags:
      - user
      operationId: GetBadgetExpensesAndIncome
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetByParams'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
  /budget/budgetKkl:
    post:
      tags:
      - user
      operationId: GetBadgetKKl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetByParams'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
  /budget/GetKKlAmount/{tripId}:
    get:
      tags:
      - user
      operationId: GetKKlAmount
      parameters:
      - name: tripId
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: number
  /budget/IsExistBudgetToYishuv/{startDate}/{cityId}/{budgetType}:
    get:
      tags:
      - user
      operationId: IsExistBudgetToYishuv
      parameters:
      - name: startDate
        in: path
        required: true
        schema:
          type: string
          format: date-time
      - name: cityId
        in: path
        required: true
        schema:
          type: integer
      - name: budgetType
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
  /createTrip:
    post:
      tags:
      - user
      operationId: CreateTrip
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripInfo'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripModel'
        "400":
          description: invalid data
  /updateTrip/{tripId}/{userNmae}:
    put:
      tags:
      - user
      operationId: UpdateTrip
      parameters:
      - name: tripId
        in: path
        description: the unique trip Id
        required: true
        schema:
          type: integer
      - name: userNmae
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: a trip to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripInfo'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripModel'
        "400":
          description: Invalid tripId  supplied
        "404":
          description: the tripId supplied not found
  /cancelTrip:
    post:
      tags:
      - user
      operationId: CancelTrip
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelTrip'
      responses:
        "200":
          description: Success
        "404":
          description: the tripId supplied not found
        "500":
            description: internal server error

  /getTrip/{tripId}: 
    get:
      tags:
      - user
      operationId: GetTripDetails
      parameters:
      - name: tripId
        in: path
        required: true
        schema:
          type: integer   
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripModel' 
  /createTripActivities/{userName}:
    post:
      tags:
      - activities
      operationId: CreateTripActivities
      description:  adding activities ,orderFacilities, and Start an order
      parameters:
      - name: userName
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripCalendar'
      responses:
        "201":
          description: successful operation
        "500":
          description: internal server error
        "400": 
          description: invalid data

  /updateTrip/{userName}:
    put:
      tags:
        - activities
      operationId: UpdateTripActivities
      description:  update activities ,orderFacilities, and Start an order
      parameters:
        - name: userName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        description: a tripCalendar to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripCalendar'
      responses:
        "200":
          description: seker object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripCalendar'
        "400":
          description: invalid data
        "500":
          description: internal server error


  /tripCalendar/{tripId}:
     get:
      tags:
      - activities
      operationId: GetTripCalendar
      parameters:
      - name: tripId
        in: path
        required: true
        schema:
          type: integer   
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripCalendar' 

  /QueueTasks/SearchQueTasks/{tripId}:
    get:
      tags:
      - queuetasks
      operationId: SearchQueTasks
      parameters:
      - name: tripId
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            text/json:
              schema:
                type: string
  
  
  /Movements/GetAllMovementsById/{tripId}:
    get:
      tags:
      - movements
      operationId: GetAllMovementsById
      parameters:
      - name: tripId
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movements'
  /Movements/AddMove:
    post:
      tags:
      - movements
      operationId: AddMove
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movements'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movements'
  /tempOrder/{tripId}:
    get:
      tags:
      - order
      operationId: GetTempOrders
      parameters:
      - name: tripId
        in: path
        required: true
        schema:
          type: integer    
      responses:
        "200":
          description: list of tempOrder
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TempOrder'
  # /Order/AddOrder/{permissionId}/{isOccupancyProblemFromSp}/{ibRemoveOccProb}:
  /order/getOrders/{tripId}:
    get:
      tags:
      - order
      operationId: GetOrders
      parameters:
      - name: tripId
        in: path
        required: true
        schema:
          type: integer    
      responses:
        "200":
          description: list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderEvent'
  /order/AddOrder/{permissionId}:
    post:
      tags:
      - order
      operationId: AddOrder
      parameters:
      - name: permissionId
        in: path
        required: true
        schema:
          type: integer
      # - name: isOccupancyProblemFromSp
      #   in: path
      #   required: true
      #   schema:
      #     type: string
      #     nullable: true
      # - name: ibRemoveOccProb
      #   in: path
      #   required: true
      #   schema:
      #     type: integer
      requestBody:
        content:
          application/json:
            schema:
               $ref: '#/components/schemas/OrderEvent'
      responses:
        "200":
          description: Success
          content:
            application/json:
               schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderEvent'
  # /order/EditOrder/{userName}/{permId}/{descOccupancyProbFromSp}/{isRemoveOccProb}:
  /order/EditOrder/{userName}/{permId}:
    put:
      tags:
      - order
      operationId: EditOrder
      parameters:
      # - name: tripId
      #   in: path
      #   required: true
      #   schema:
      #     type: integer
      - name: userName
        in: path
        required: true
        schema:
          type: string
          nullable: true
      - name: permId
        in: path
        required: true
        schema:
          type: integer
      # - name: descOccupancyProbFromSp
      #   in: path
      #   required: true
      #   schema:
      #     type: string
      #     nullable: true
      # - name: isRemoveOccProb
      #   in: path
      #   required: true
      #   schema:
      #     type: integer
      requestBody:
        content:
          application/json:
             schema:
              # type: array
              # items:
              #  type: object
               $ref: '#/components/schemas/OrderEvent'
      responses:
        "200":
          description: Success
          content:
            application/json:
               schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderEvent'
  /order/orderType:
    get:
      tags:
      - order
      operationId: GetOrderTypes
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderType'
  /order/CancelOrder/{tripId}/{orderId}/{cause}/{userName}:
    get:
      tags:
      - order
      operationId: CancelOrder
      parameters:
      - name: tripId
        in: path
        required: true
        schema:
          type: integer
      - name: orderId
        in: path
        required: true
        schema:
          type: integer
      - name: cause
        in: path
        required: true
        schema:
          type: string
          nullable: true
      - name: userName
        in: path
        required: true
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Success
          
          
  /orderItems/OrdersItemBySupplierID/{supplierId}/{centerFieldId}/{isOneDay}:
    get:
      tags:
      - order
      operationId: GetOrdersItemBySupplierID
      parameters:
      - name: supplierId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: centerFieldId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: isOneDay
        in: path
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemsByTypeOrder'
  /orderItems/DeleteItemOrder/{tripId}/{orderId}/{itemIndex}/{userName}/{permId}:
    delete:
      tags:
      - order
      operationId: DeleteItemOrder
      parameters:
      - name: tripId
        in: path
        required: true
        schema:
          type: integer
      - name: orderId
        in: path
        required: true
        schema:
          type: integer
      - name: itemIndex
        in: path
        required: true
        schema:
          type: integer
      - name: userName
        in: path
        required: true
        schema:
          type: string
          nullable: true
      - name: permId
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
           
  /orderItems/CheckItemsExistInDateTime/{tripId}/{centerFieldId}:
    post:
      tags:
      - order
      operationId: CheckItemsExistInDateTime
      parameters:
      - name: tripId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: centerFieldId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItemCommonDetails'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
  /defaultItemByItem/IfAddItemToExistItemByIdOrder/{orderItemId}:
    get:
      tags:
      - order
      operationId: IfAddItemToExistItemByIdOrder
      parameters:
      - name: orderItemId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: integer
                format: int32
  /supplier/getSupplierList/{orderTypeId}/{tripId}/{orderId}:
    get:
      tags:
      - order
      operationId: GetSupplierList
      parameters:
      - name: orderTypeId
        in: path
        required: true
        schema:
          type: integer
      - name: tripId
        in: path
        required: true
        schema:
          type: integer
      - name: orderId
        in: path
        required: true
        schema:
          type: integer
          nullable: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier'
  /supplier/SupplierByOrderType/{orderTypeId}/{centerField}/{permissionUser}:
    get:
      tags:
      - order
      operationId: GetSupplierByOrderType
      parameters:
      - name: orderTypeId
        in: path
        required: true
        schema:
          type: integer
      - name: centerField
        in: path
        required: true
        schema:
          type: integer
      - name: permissionUser
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
components:
  schemas:
    FieldForestCenter:
      required:
      - id
      - name
      type: object
      properties:
        id:
          title: FieldForestCenter ID
          type: integer
          description: FieldForestCenter unique ID
          example: 101
        name:
          title: FieldForestCenter Name
          type: string
          description: Field & Forest Center name
          example: נס הרים
        iconPath:
          title: icon
          type: string
          description: yochai will check for path or base64
          example: href...
        accommodationList:
          type: array
          description: list of available accomoadation types
          items:
            $ref: '#/components/schemas/AccommodationType'
        linkSite:
          type: string
          description: gg
          example: http://
        isActive: 
          type: boolean
          example: true
    AccommodationType:
      required:
      - id
      - name
      type: object
      properties:
        id :
          title: Guest cabin
          type: integer
          description: Accomodation Type Id
          example: 3
        name :
          title: Accomodation Name
          type: string
          description: Accomodation type name
          example: בקתה
        nameEng:
          type: string
          description: For compatibility reasons
          example: cabin
        img:
          type: string
          description: 'For compatibility reasons'
          example: ..href
        maxOccupancy:
          type: integer
          description: max occupancy (beds) per one lodging place
          example: 40
        totalUnits:
          type: integer
          description: num of units in fieldforestcenter
          example: 40
    AvailableAccomodationDate:
      required:
      - date
      type: object
      properties:
        date:
          title: date
          type: string
          description: Current date of a month title
          format: date-time
        freeSpace:
          type: array
          description: List of accomoadation free beds.
          items:
            $ref: '#/components/schemas/AccomodationFreeSpaces'
        
    AccomodationFreeSpaces:
       type: object
       description :  Number of available beds for a certain accomoadation type (ex. Cabin, room, tent etc.)
       properties:
        accomodationName:
          type: string
          example: name
        availableBeds:
          type: integer
          nullable: true
          example: 20

    AvailableSleepingOptionsByDay:
       type: object
       description : Available sleeping options by Day and maximum occupancy.
       properties:
        date:
          type: string
          format: date
        sleepingOptions:
          type: array
          items:
            $ref: '#/components/schemas/SleepingOptions'

    SleepingOptions: 
        type: object
        properties:
         accomodationTypeId:
          type: integer
          example: 1
         acoomodationTypeName:
           type: string
           example: 'בקתה'
         maxOccupancy:
           type: integer
           nullable: true
           description: Maximum per lodging unit.
           example: 20
         availableUnits:
           type: integer           
           description: Number of avaliable lodging units (not beds!) for a day
           example: 2
         nameEng: 
           type: string
           example: "cabin"
         img:
           type: string
           example: 'בקתה'
      
    FacilityDate:
      type: object
      properties:
        date:
          type: string
          format: date
        facilitiesList:
          type: array
          items:
            $ref: '#/components/schemas/AvailableFacility'
      description: Describes the availability of the facilities by date
    AvailableFacility:
      required:
      - id
      - name
      type: object
      properties:
        id:
          title: Facility Type Id
          type: integer
          description: Field-Forest-Center Facility Id
          example: 8
        name:
          type: string
          description: Facility name
          example: כיתה גדולה
        maxOccupancy:
          type: integer
          description: rerer
          example: 40
        iconPath:
          type: string
          example: 'http..'
        occupiedHours:
          type: array
          items:
            $ref: '#/components/schemas/OccupiedHours'
      description: decribes ...
    OccupiedHours:
      required:
      - fromHour
      - tillHour
      type: object
      properties:
        fromHour:
          type: string
          example: 13:00
        tillHour:
          type: string
          example: 15:00
        totalTime:
          type: number
          example: 1.25
        customerName:
          type: string
          example: סימינר הקיבוצים
      description: 'decribes ... '
   

    FacilityMapByDates:
      type: object
      description: 'map object received from the server (for the GIS map)'
      properties:
        date:
          type: string
          format: date
        lodgingFacilityList:
          type: array
          items:
            $ref: '#/components/schemas/LodgingGISFacility'

         
    MapParameters:
      type: object
      description: 'parameters to send to the internal GIS map (angular component)'
      properties:
        fieldForestCenterName:
          type: string
          example: 'נס הרים'
        lodgingFacilityList:
          type: array
          items:
            $ref: '#/components/schemas/LodgingGISFacility'

    LodgingGISFacility:
       type: object
       properties:
        structureId:
          type: integer
          description: 'the id of current structure as defined in the GIS'
          example: 10
        structureType:
          type: string
          description: 'the structure name'
          example: בקתה
        gender:
          type: string
          description: three possible values - בנים, בנות,מעורב
          example: בנים
        status:
          type: string
          description: Possible values - פנוי, תפוס, בניקיון, בשיפוץ
          example: תפוס



    LodgingReservation:
      type: object
      properties:
        nightsCount:
          type: array
          items:
            $ref: '#/components/schemas/NightNumberOptions'
        lodgingDetailsList:
          type: array
          items:
            $ref: '#/components/schemas/LodgingDetailsPerDay'
    
    LodgingDetailsPerDay:
       type: object
       properties:
        accomodationType:
           $ref: '#/components/schemas/AccommodationType'
        participant:
           $ref: '#/components/schemas/ParticipantType'
        lodgersNumber:
          type: integer
          example: 10
        unitsNumber:
          type: integer
          example: 1
        comments:
          type: string
          example: 'שולם'
          

    NightNumberOptions:
       type: object
       description: describe the night index in the  range dates
       properties:
        date: 
          type: string
          format: date
          example: '2021-09-23'
        nightNumber:
          type: integer
          description: describe the 
          example: 1
        nightNumberValue:
          type: string
          example: לילה 1
        selected: 
          type : boolean
          example: true
          

    BaseCustomer:
      required:
      - id
      - name
      type: object
      discriminator:  
        propertyName: baseCustomer
      properties:
        id:
          type: integer
          example: 50
        name:
          type: string
          example: סמינר הקיבוצים
        lastName:
          type: string
          example: kkl
        contactName:
          type: string
          example: דן
        contactMobile:
          type: string
          example: "613566756"
        contactEmail:
          type: string
          example: test@gmail.com
        
    Customer:
      type: object
      allOf: 
        - $ref: '#/components/schemas/BaseCustomer'
      properties:
        # customerId:
        #   type: integer
        #   example: 4
        # customerName:
        #   type: string
        #   example: סימינר הקיבוצים
        typeId:
          type: integer
          example: 6
        typeName:
          type: string
          example: חול
        identificationTypeId:
          type: integer
          nullable: true
          example: 7
        idCode:
          type: integer
          nullable: true
          example: 9
        provinceId:
          type: integer
          nullable: true
          example: 9
        countryId:
          type: integer
          nullable: true
          example: 6
        countryName:
          type: string
          example: israel
        regionId:
          type: integer
          nullable: true
          example: 30
        regionName:
          type: string
          example: צפון
        cityIdHebName:
          type: string
          example: תל אביב
        streetNameHeb:
          type: string
          example: מעון
        zipId:
          type: integer
          nullable: true
          example: 30
        phone:
          type: string
          example: "95869805"
        phoneWorks:
          type: string
          example: 00-3333333
        fax:
          type: string
          example: 00-4444444
        email:
          type: string
          example: test@gmail.com
        # contactName:
        #   type: string
        #   example: דן
        # contactPhone:
        #   type: string
        #   example: 00-9999999
        # contactMobile:
        #   type: string
        #   example: "613566756"
        userName:
          type: string
          example: dan
        generateDate:
          type: string
          format: date-time
          nullable: true
        appId:
          type: integer
          nullable: true
          example: 5
        noPayment:
          type: integer
          nullable: true
          example: 2
        internalCustomer:
          type: integer
          nullable: true
          example: 15
 
    TripInfo:
      required:
       - tripDescription
       - tripStart
       - tripEnding
       - centerField
       - activity
       - ageGroup
       - attribute
       - customer
       - contactName
       - contactPhone
       - contactEmail
       - numAdultAndYoung
       - departmentId
       - userName
       - insideCenterFieldId
      type: object
      properties:
        id:
          type: integer
          nullable: true
          example: 88887777
        tripDescription:
          type: string
          example: school education
        tripStart:
          type: string
          format: date-time
        tripEnding:
          type: string
          format: date-time
        centerField:
          $ref: '#/components/schemas/FieldForestCenter'
        activity:
          $ref: '#/components/schemas/ActivityType'
        ageGroup:
          $ref: '#/components/schemas/AgeGroup'
        attribute:
          $ref: '#/components/schemas/TripAttribute'
        areaTrip:
          $ref: '#/components/schemas/Area'
        budget:
          $ref: '#/components/schemas/Budget'
        customer:
          $ref: '#/components/schemas/BaseCustomer'
        kklWorkerId:
          type: integer
          example: 12
        kklWorkerName:
          type: string
          example: 'yaniv'
        customerPay:
          $ref: '#/components/schemas/BaseCustomer'
        commentManager:
          type: string
          example: checked well
        contactName:
          type: string
          example: dan
        contactPhone:
          type: string
          example: "38347922"
        contactEmail:
          type: string
          example: test@gmail.com
        confirm:
          type: string
          example: confirmed
        customerSignatureDate:
          type: string
          format: date-time
          nullable: true
        confirmBy:
          type: string
          example: dan
        country:
          $ref: '#/components/schemas/Country'
        departmentId:
          type: integer
          description: 1= Israel, 8= Abroad
          example: 1
        lodgingReservation:
          type: array
          items:
            $ref: '#/components/schemas/LodgingReservation'
        generateTime:
          type: string
          description: Trip creation date
          format: date-time
        language:
          $ref: '#/components/schemas/Language'
        numAccompanied:
          type: integer
          example: 5
        numAdultAndYoung:
          type: integer
          example: 8
        numAccompaniedAndGuide:
          type: integer
          example: 9
        numGuides:
          type: integer
          example: 5
        numDrivers:
          type: integer
          example: 4
        numShtilim:
          type: integer
          example: 10
        noPayment:
          type: integer
          nullable: true
          example: 1
        tripStatus:
          $ref: '#/components/schemas/Status'
        # tripStatusId:
        #   type: integer
        #   example: 3
        # tripStatusName:
        #   type: string
        #   example: חדש
        userMobile:
          type: string
          example: "2222222222"
        userId:
          type: string
          example: gadiId
        userName:
          type: string
          example: gadi
        reasonUnConfirm:
          type: string
          example: not checked
        insideCenterFieldId:
          type: integer
          description: 1=Inside center, 2=Outside center
          example: 0
        addressCasualCustomer:
          type: string
          example: tel 18
        cityCasualCustomer:
          type: string
          example: tel-aviv
        zipCasualCustomer:
          type: integer
          format: int64
          nullable: true
          example: 9999
        phoneCasualCustomer:
          type: string
          example: "88888"
        nameCasualCustomer:
          type: string
          example: eyal
        isSalKKlGroup:
          type: integer
          nullable: true
          example: 4
        isOccupancyProblematic:
          type: integer
          nullable: true
          example: 5
    ActivityType:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          example: 8
        name:
          type: string
          example: education
        attributeId:
          type: integer
          nullable: true
          example: 6
        isCustomerSignature:
          type: integer
          nullable: true
          example: 2
        isOnDay:
          type: integer
          nullable: true
          example: 2
    BudgetByParams:
      type: object
      required:
      - attribute
      - userId
      - userName
      properties:
        tripStart:
          type: string
          format: date-time
        attribute:
          $ref: '#/components/schemas/TripAttribute'
        activity:
          $ref: '#/components/schemas/ActivityType'
        budget:
          $ref: '#/components/schemas/Budget'
        userName:
          type: string
          example: dan
        userId:
          type: string
          example: dan123
        tripId:
          type: integer
          nullable: true
          example: 123
    SubBudget:
      type: object
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: ''
    Budget:
      type: object
      properties:
        desc:
          type: string
          example: education budget
        kklAmount:
          type: integer
          nullable: true
          example: 2000
        customerAmount:
          type: integer
          nullable: true
          example: 1000
        type:
          type: integer
          nullable: true
          example: 4
        isByCity:
          type: integer
          nullable: true
        listCity:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/City'
        cityId:
          type: integer
          nullable: true
          example: 4
        # incomeBudget:
        #   type: integer
        #   example: 500
        execution:
          type: integer
          nullable: true
          example: 5
        # balance:
        #   type: integer
        #   example: 2
        balanceFin:
          type: integer
          nullable: true
          example: 1
        isNeedCalculate:
          type: integer
          nullable: true
          example: 2
        # budget:
        #   type: integer
        #   example: 5000
        incomeId:
          type: integer
          example: 6
        incomeName:
          type: string
          example: Hospitality
        expensesId:
          type: integer
          example: 3
        expensesName:
          type: string
          example: economy
        subBudgetIncomeList:
          type: array
          items:
            $ref: '#/components/schemas/SubBudget'
        subBudgetExpenseList:
          type: array
          items:
            $ref: '#/components/schemas/SubBudget'
    AgeGroup:
      type: object
      properties:
        id:
          type: integer
          example: 3
        name:
          type: string
          example: מבוגרים
    TripAttribute:
      type: object
      properties:
        id:
          type: integer
          example: 2
        name:
          type: string
          example: פורמלי
        budgetId:
          type: integer
          nullable: true
          example: 5
        budgetName:
          type: string
          example: education budget
        subsidization1To25:
          type: integer
          description: subsidization 1 to 25 ratio
          nullable: true
          example: 4
        autoCustomerId:
          type: integer
          nullable: true
          example: 72
    Area:
      type: object
      properties:
        id:
          type: integer
          example: 7
        name:
          type: string
          example: desert
        regionId:
          type: integer
          nullable: true
          example: 5
    City:
      type: object
      properties:
        id:
          type: integer
          example: 9
        name:
          type: string
          example: tel-aviv
        typeId:
          type: integer
          example: 6
    Country:
      type: object
      properties:
        id:
          type: integer
          example: 15
        name:
          type: string
          example: ישראל
        currencyId:
          type: integer
          nullable: true
          example: 2
        nameEng:
          type: string
          example: Israel
    ParticipantType:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: מבוגרים
    Language:
      type: object
      properties:
        id:
          type: integer
          example: 4
        name:
          type: string
          example: hebrew
        countryId:
          type: integer
          example: 12
          nullable: true
    Status:
      type: object
      properties:
        id:
          type: integer
          example: 3
        name:
          type: string
          example: active
      
    Movements:
      type: object
      properties:
        tripId:
          type: integer
          example: 4556
        id:
          type: integer
          example: 55
        typeId:
          type: integer
          example: 54
        typeName:
          type: string
          example: עדכון
        description:
          type: string
          example: update trip
        userName:
          type: string
          example: daniId
        openDate:
          type: string
          format: date-time
    Account:
      type: object
      properties:
        userId:
          type: string
          example: danId
        userName:
          type: string
          example: דן
        userNameEng:
          type: string
          example: dan
        password:
          type: string
          example: kkkk
        email:
          type: string
          example: test@gmail.com
        phone:
          type: string
          example: "6666666666"
        currentPermissionId:
          type: integer
          nullable: true
          example: 6
        currentPermissionName:
          type: string
          example: readonly
        fromRegion:
          type: integer
          nullable: true
          example: 5
        toRegion:
          type: integer
          nullable: true
          example: 10
        isCanSendConfirmation:
          type: integer
          nullable: true
          example: 6
        centerFieldId:
          type: integer
          nullable: true
          example: 7
    CancelTrip:
      type: object
      required:
      - tripId
      - userName
      - statusToUpdateId
      properties:
        tripId:
          type: integer
          example: 12456
        causeCancel:
          type: string
          example: kk
        statusToUpdateId:
          type: integer
          example: 5
        userName:
          type: string
          example: kk
        userNameEng:
          type: string
          example: kkmm
    
    TripCalendar:
      type: object
      properties:
        tripId:
         type: integer
         example: 1
        tempOrderList:
          type: array
          items:
            $ref: '#/components/schemas/TempOrder'
        activityList:
           type: array
           items:
            $ref: '#/components/schemas/TripActivity'
        # activityAndFacilityList:
        #    type: array
        #    items:
        #     $ref: '#/components/schemas/TripActivity'
        # facilityOrderList:
        #    type: array
        #    items:
        #     $ref: '#/components/schemas/TempOrder'

    # FacilityOrder:
    #    type: object
    #    properties:
    #     tripId:
    #      type: integer
    #      example: 1
    #     facilityId:
    #       type: integer
    #       example: 1
    #     orderId: 
    #      type: integer
    #      example : 12345
    #      nullable: true
    #     orderItemIdentity:
    #      type: integer
    #      description: refers to indentity record on data base
    #      example : 12345
    #      nullable: true
    #     facilityName:
    #      type: string
    #     startDate: 
    #       type: string
    #       format: date-time
    #     endDate:
    #       type: string
    #       format: date-time
    #     startHour:
    #       type: string
    #       format: date-time
    #     endHour:
    #       type: string
    #       format: date-time
    #     openBy: 
    #       type: string
    #       example: 'שחר גל'
    TempOrder:
      type: object
      properties:
       orderTempId:
        type: integer
        example: 1
       tripId:
        type: integer
        example: 12
       orderTypeCode:
        type: integer
       orderTypeName:
        type: string
        example : 'היסעים'
       orderId: 
         type: integer
         example : 12345
         nullable: true
       orderItemIdentity:
         type: integer
         description: refers to indentity record on the order table
         example : 12345
         nullable: true
       itemId:
         type: intege
         description: the unique item order id
         example : 123
         nullable: true
       orderItemName:
         type: string
         example: אוטובוס
       startDate: 
          type: string
          format: date-time
          example: '2021-11-12T00:00:00'
       endDate: 
          type: string
          format: date-time
          example: '2021-11-12T00:00:00'
       fromHour:
          type: string
          format: date-time
          example: '2021-11-12T13:00:00'
       tillHour:
          type: string
          format: date-time
          example: '2021-11-12T15:00:00'
       userName: 
          type: string


          
    TripActivity:
      type: object
      properties:
        activityId:
          type: integer
          description :  the unique activity Id
          example: 1
          nullable: true
        activityName: 
          type: string
          example: 'חינוך'
        tripActivityIdentity :
          type: integer
          description: refers to indentity record on trip activities table in data base
          example: 56
          nullable: true
        # categoryId:
        #   type: integer
        #   example: 2
        #   nullable: true
        date:
           type: string
           format: date-time
           example: '2021-11-12T00:00:00'
        description:
           type: string
           example: 'students education'
        fromHour:
          type: string
          format: date-time
          example: '2021-11-12T10:00:00'
        tillHour:
          type: string
          format: date-time
          example: '2021-11-12T12:00:00'
        tripId:
          type: integer
          example: 2
        userName:
          type: string
          example: dan
        
    TripActivityLookup:
      type: object
      properties:
        activityId:
          type: integer
          example: 1
        name:
          type: string
          example: 'education'
        sitePicture:
          type: string
          example: 'http://'
        linkToDetails:
          type: string
          example: 'http://'
        description:
          type: string
          example: ''
        categoryId:
          type: integer
          nullable: true
          description: activity by category
          example: 1
        regionId:
          type: integer
          nullable: true
          description: activity by region
          example: 3
    ActivityCategory:
       type: object
       properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: 'education'
 
    # OrderModel:
    #   type: object
    #   properties:
    #     order:
    #       $ref: '#/components/schemas/Order'
    #     listItems:
    #       type: array
    #       nullable: true
    #       items:
    #         $ref: '#/components/schemas/OrderItem'
    #     totalPayCustomer:
    #       type: number
    #       nullable: true
    #     totalPaySupplier:
    #       type: number
    #       nullable: true
    #     totalPayAfterKklSubsidy:
    #       type: number
    #       nullable: true
    Order:
      type: object
      properties:
        tripId:
          type: integer
        orderId:
          type: integer
        status:
          $ref: '#/components/schemas/Status'
        orderType:
          $ref: '#/components/schemas/OrderType'
        supplier:
          $ref: '#/components/schemas/Supplier'
        comment:
          type: string
        # guideId:
        #   type: integer
        #   nullable: true
        siteId:
          type: integer
          nullable: true
        sentToSupplier:
          type: string
          format: date-time
          nullable: true
        sentBy:
          type: string
        voucherNum:
          type: integer
          nullable: true
        cancelDate:
          type: string
          format: date-time
          nullable: true
        causeCancellation:
          type: string
        cancelBy:
          type: string
        # billId:
        #   type: integer
        #   nullable: true
        paidToSupplier:
          type: number
          nullable: true
        userName:
          type: string
        openDate:
          type: string
          format: date-time
          nullable: true
        finOrderType:
          type: string
        # sentByUser:
        #   type: string
        #   nullable: true
        budgetItem:
          type: integer
          nullable: true
        confirmDate:
          type: string
          format: date-time
          nullable: true
        confirmBy:
          type: string
        confirmUserTz:
          type: integer
          nullable: true
        confirmByUser:
          type: string
        confirmCancelBy:
          type: string
        confirmCancelByUser:
          type: string
        confirmCancelDate:
          type: string
          format: date-time
          nullable: true
        confirmCancelUserTz:
          type: integer
          nullable: true
        supplierProcedureNum:
          type: string
        totalPayCustomer:
            type: number
            nullable: true
        totalPaySupplier:
            type: number
            nullable: true
        totalPayAfterKklSubsidy:
           type: number
           nullable: true
        # numGuide:
        #   type: integer
        #   nullable: true
    
    # OrderItem:
    #   type: object
    #   allOf: 
    #     - $ref: '#/components/schemas/OrderItemCommonDetails'
    #   properties:
    #     tripId:
    #       type: integer
    #     orderId:
    #       type: integer
    #     itemIndx:
    #       type: integer
    #     comment:
    #       type: string
    #       nullable: true
    #     internalComment:
    #       type: string
    #       nullable: true
    #     isVat:
    #       type: integer
    #       nullable: true 
    #     userName:
    #       type: string
    #       nullable: true
    #     generateDate:
    #       type: string
    #       format: date-time
    #       nullable: true
    #     approvedDate:
    #       type: string
    #       format: date-time
    #       nullable: true
    #     approvalTraining:
    #       type: integer
    #       nullable: true
    #     approvalTrainingUser:
    #       type: string
    #       nullable: true
    #     approvalTrainingDate:
    #       type: string
    #       format: date-time
    #       nullable: true
    #     explainComment:
    #       type: string
    #       nullable: true  
    #     paymentApproval:
    #       type: integer
    #       nullable: true
    #     paymentApprovalUser:
    #       type: string
    #       nullable: true
    #     paymentApprovalDate:
    #       type: string
    #       format: date-time
    #       nullable: true
    #     approvalAccountant:
    #       type: integer
    #       nullable: true
    #     approvalAccountantZikuyDate:
    #       type: string
    #       format: date-time
    #       nullable: true
    #     attributeManagerApproval:
    #       type: integer
    #       nullable: true
    #     attributeManagerApprovalDate:
    #       type: string
    #       format: date-time
    #       nullable: true
    #     guideTz:
    #       type: integer
    #       nullable: true
    #     guideType:
    #       type: integer
    #       nullable: true
    #     guideName:
    #       type: string
    #       nullable: true
    #     rakazApproval:
    #       type: integer
    #       nullable: true
    #     rakazApprovalDate:
    #       type: string
    #       format: date-time
    #       nullable: true
    #     rakazApprovalUser:
    #       type: string
    #       nullable: true
    #     guideId:
    #       type: integer
    #       nullable: true
        # start:
        #   type: string
        #   format: date-time
        #   nullable: true
        # end:
        #   type: string
        #   format: date-time
        #   nullable: true
        # startHour:
        #   type: string
        #   format: date-time
        #   nullable: true
        # endHour:
        #   type: string
        #   format: date-time
        #   nullable: true
        # exitPoint:
        #   type: integer
        #   nullable: true
        # endPlace:
        #   type: string
        #   nullable: true
        # startPlace:
        #   type: string
        #   nullable: true
        # itemId:
        #   type: integer
        #   nullable: true
        # itemCost:
        #   type: number
        #   nullable: true
        # billingSupplier:
        #   type: number
        #   nullable: true
        # billingCustomer:
        #   type: number
        #   nullable: true
        # amount:
        #   type: integer
        #   nullable: true
        # peopleInTrip:
        #   type: integer
        #   nullable: true
        # retroSendChilan:
        #   type: integer
        #   nullable: true
        # isSlaraySection:
        #   type: integer
        #   nullable: true
        # slaraySectionUser:
        #   type: string
        #   nullable: true
        # slaraySectionDate:
        #   type: string
        #   format: date-time
        #   nullable: true
        # receiptFromGuideDate:
        #   type: string
        #   format: date-time
        #   nullable: true
        # includeInvoice:
        #   type: integer
        #   nullable: true
        # emailSentDate:
        #   type: string
        #   format: date-time
        #   nullable: true
        # approvedCancelBy:
        #   type: string
        #   nullable: true
        # approvedCancelDate:
        #   type: string
        #   format: date-time
        #   nullable: true
        # approvedCancelIdno:
        #   type: integer
        #   nullable: true
        # sentChilan:
        #   type: integer
        #   nullable: true
        # sentChilanDate:
        #   type: string
        #   format: date-time
        #   nullable: true
        # placeForCalculation:
        #   type: string
        #   nullable: true
        # paymentMonth:
        #   type: integer
        #   nullable: true
        # paymentYear:
        #   type: integer
        #   nullable: true
        # status:
        #   $ref: '#/components/schemas/Status'
        # sentBy:
        #   type: string
        #   nullable: true
        # approvedBy:
        #   type: string
        #   nullable: true
        # itemBeforeChange:
        #   type: integer
        #   nullable: true
        # datesTemp:
        #   type: array
        #   items:
        #     type: string
        #     format: date-time
        #     nullable: true
        # isGuideSleep:
        #   type: integer
        #   nullable: true
        # isCopyRow:
        #   type: boolean
    
    # OrderModel1:
    #   type: object
    #   properties:
    #     transportOrder:
    #       $ref: '#/components/schemas/TransportOrder'
    #     siteOrder:
    #       $ref: '#/components/schemas/SiteOrder'
    #     totalPayCustomer:
    #       type: number
    #       nullable: true
    #     totalPaySupplier:
    #       type: number
    #       nullable: true
    #     totalPayAfterKklSubsidy:
    #       type: number
    #       nullable: true

    # OrderModel:
    #    type: object
    #    properties:
    #       orderList:
    #         type: array
    #         items:
    #          $ref: '#/components/schemas/OrderEvent'
    #       totalPayCustomer:
    #         type: number
    #         nullable: true
    #       totalPaySupplier:
    #         type: number
    #         nullable: true
    #       totalPayAfterKklSubsidy:
    #        type: number
    #        nullable: true

    OrderItemCommonDetails:
      #  discriminator:  
      #   propertyName: orderCommonDetails
      type: object
      properties:
        itemId:
          type: integer
          description: the unique item id
        itemOrderRecordId:
          type: integer
          description: refers to indentity record on order table in data base
        orderId:
          type: integer
        tempOrderIdentity:
          type: integer
          nullable: true
        orderItemDetails:
          $ref: '#/components/schemas/ItemsByTypeOrder'    
        quantity:
         type: integer
        itemCost:
          type: number
        billingSupplier:
          type: number
          nullable: true
        billingCustomer:
          type: number
          nullable: true
        peopleInTrip:
          type: integer
          nullable: true
        location:
          type: string         
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        startHour:
          type: string
          format: date-time
        endHour:
          type: string
          format: date-time
        userName:
          type: string
        comments: 
          type: string
        internalComment:
          type: string     
        openDate:
          type: string
          format: date-time
        

    OrderEvent:
      discriminator:  
       propertyName: orderEvent
      type: object
      properties:
       order:
           $ref: '#/components/schemas/Order' 
       globalParameters: 
           description: Common parameters for all types of orders
           $ref: '#/components/schemas/OrderItemCommonDetails'
    
    TransportOrder:
      type: object
      allOf: 
        - $ref: '#/components/schemas/OrderEvent'
      properties:
        exitPoint:
          type: string
          description: exit point of transport for calculate price
        scatterLocation:
          type: string
    
    SiteOrder:
        type: object
        allOf: 
        - $ref: '#/components/schemas/OrderEvent'
        properties:
         totalHours :
             type: number
             example: 5
         siteAddress:
             type: string
             example: 'http://'
         isCustomerOrder:
              type: boolean
              example: true
    EconomyOrder :
        type: object
        allOf: 
        - $ref: '#/components/schemas/OrderEvent'
        properties:
          #  servingTime:
          #     type: string
          #     example: 15:00
          #  location:
          #     type: string
          #     example: חדר אוכל ציפורי
           regularDishesNumber:
              type: integer
              example: 100
           vegetarianDishesNumber: 
              type: integer
              example: 20
           veganDishesNumber: 
              type: integer
              example: 20
    GuidanceOrder :
         type: object
         allOf: 
         - $ref: '#/components/schemas/OrderEvent'
         properties:
            scatterLocation:
              type: string
              example: tel aviv
            guideName:
              type: string
              example: dan
            languageGide:
              type: string
              example: english
            guideInstructions:
              type: string
              example: 'kk'
            

         type: object
         allOf: 
         - $ref: '#/components/schemas/OrderEvent'
    SecuringOrder:    
         type: object
         allOf: 
         - $ref: '#/components/schemas/OrderEvent'
         properties:
           scatterLocation:
            type: string
            example: ramat-gan
          #  guardName:
          #    type: string
          #    example : dan

      
    MusicActivationOrder:
         type: object
         allOf: 
         - $ref: '#/components/schemas/OrderEvent'
         properties:
           totalHours:
             type: integer
             example: 4
    
    OrderType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        iconPath:
          type: string
        finOrderType:
          type: string
          
    Supplier:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        finId:
          type: number
          nullable: true
        cityId:
          type: integer
          nullable: true
        address:
          type: string
        supplierType:
          type: integer
          nullable: true
        isValid:
          type: integer
          nullable: true
        phone:
          type: string
        email:
          type: string
        fax:
          type: string
        contact:
          type: string
        registrationNum:
          type: string
        supplierFinId:
          type: integer
        isGuideSupplier:
          type: integer
          nullable: true
    ItemsByTypeOrder:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        cost:
          type: number
        title:
          type: string
        type:
          type: integer
        costCustomer:
          type: number
        costSupplier:
          type: number
        numPeople:
          type: integer
        cosherType:
          type: integer
        credit:
          type: integer
          nullable: true
        costVat:
          type: number
          nullable: true
        isCustomerBilling:
          type: integer
          nullable: true
        isNight:
          type: integer
          nullable: true
        orderType:
          type: integer
          nullable: true
        isSumPeopleOrAmount:
          type: integer
          nullable: true
        groupTypeId:
          type: integer
          nullable: true
        weekPart:
          type: string
        typeSleepId:
          type: integer
          nullable: true
        customerId:
          type: string
          nullable: true
        supplierId:
          type: integer
          nullable: true
        classroomTypeId:
          type: integer
          nullable: true
        isSmallRange:
          type: integer
          nullable: true
        amountLimit:
          type: integer
          nullable: true
        participantsLimit:
          type: integer
          nullable: true
        numSeat:
          type: integer
          nullable: true
        isMore:
          type: integer
          nullable: true
        listNamesClasses:
          type: array
          items:
            type: string
            nullable: true

    TripModel:
      type: object
      properties:
        trip:
          $ref: '#/components/schemas/TripInfo'
        activitiesList:
          type: array
          items:
            $ref: '#/components/schemas/TripActivity'
          nullable: true
        orderList:
          type: array
          items:
            $ref: '#/components/schemas/OrderEvent'
          nullable: true
        movementsList:
          type: array
          items:
            $ref: '#/components/schemas/Movements'
          nullable: true
